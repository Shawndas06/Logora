# –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–æ–≤—ã–π Python-–æ–±—Ä–∞–∑ —Å OpenSSL 3.0+
FROM python:3.11-slim AS base

# –£—Å—Ç–∞–Ω–æ–≤–∏–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º libssl-dev
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    libsqlite3-dev \
    libssl-dev \  # –ö–†–ò–¢–ò–ß–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï
    curl \
    gcc \
    g++ \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
COPY backend /app/backend
COPY python /app/python
COPY db /app/db

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
WORKDIR /app/python
RUN pip install --no-cache-dir -r requirements.txt

# –°–±–æ—Ä–∫–∞ C++ —Å–µ—Ä–≤–µ—Ä–∞ (–æ—Å—Ç–∞—ë—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
WORKDIR /app/backend
RUN mkdir -p build && cd build && cmake .. && make && \
    ls -la bin/ && \
    if [ ! -f bin/logora_server ]; then \
        echo "Error: C++ binary not found" && exit 1; \
    fi

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
WORKDIR /app
RUN mkdir -p /app/db \
    /app/python/receipts \
    /app/python/qrcodes \
    /app/python/logs && \
    chmod -R 777 /app/db /app/python/receipts /app/python/qrcodes /app/python/logs

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV PYTHONPATH=/app
ENV DATABASE_URL=sqlite:///db/logora.sqlite
ENV DB_PATH=/app/db/logora.sqlite
ENV LOG_FILE=/app/python/logs/app.log
ENV LOG_LEVEL=INFO

# –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤
EXPOSE 8000
EXPOSE 8080

# –î–æ–±–∞–≤–ª—è–µ–º start.sh
RUN echo '#!/bin/bash\n\
set -e\n\
echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î..."\n\
python /app/python/init_db.py\n\
echo "üöÄ –ó–∞–ø—É—Å–∫ C++ —Å–µ—Ä–≤–µ—Ä–∞..."\n\
/app/backend/build/bin/logora_server &\n\
echo "üåê –ó–∞–ø—É—Å–∫ FastAPI..."\n\
python -m uvicorn python.app:app --host 0.0.0.0 --port 8000\n' > /app/start.sh && chmod +x /app/start.sh

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
CMD ["/app/start.sh"]
